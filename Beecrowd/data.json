{
  "1000": {
    "title": "Hello World!",
    "description": "Bem-vindo ao beecrowd! \n\nO seu primeiro programa em qualquer linguagem de programação normalmente é o \"Hello World!\". Neste primeiro problema tudo o que você precisa fazer é imprimir esta mensagem na tela.",
    "input": "Este problema não possui nenhuma entrada.",
    "output": "Você deve imprimir a mensagem \"Hello World!\" e em seguida o final de linha, conforme o exemplo abaixo.",
    "languages": {
      "cpp": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/cpp/1000.cpp",
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1000.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1000.java",
      "javascript": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/js/1000.js",
      "kotlin": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/kotlin/e1000.kt",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1000.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1000.py"
    }
  },
  "1001": {
    "title": "Extremamente Básico",
    "description": "Leia 2 valores inteiros e armazene-os nas variáveis A e B. Efetue a soma de A e B atribuindo o seu resultado na variável X. Imprima X conforme exemplo apresentado abaixo. Não apresente mensagem alguma além daquilo que está sendo especificado e não esqueça de imprimir o fim de linha após o resultado, caso contrário, você receberá \"Presentation Error\".",
    "input": "A entrada contém 2 valores inteiros.",
    "output": "Imprima a mensagem \"X = \" (letra X maiúscula) seguido pelo valor da variável X e pelo final de linha. Cuide para que tenha um espaço antes e depois do sinal de igualdade, conforme o exemplo abaixo.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1001.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1001.java",
      "javascript": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/js/1001.js",
      "kotlin": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/kotlin/e1001.kt",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1001.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1001.py"
    }
  },
  "1002": {
    "title": "Área do Círculo",
    "description": "A fórmula para calcular a área de uma circunferência é: area = π . raio2. Considerando para este problema que π = 3.14159:\n\n - Efetue o cálculo da área, elevando o valor de raio ao quadrado e multiplicando por π.",
    "input": "A entrada contém um valor de ponto flutuante (dupla precisão), no caso, a variável raio.",
    "output": "Apresentar a mensagem \"A=\" seguido pelo valor da variável area, conforme exemplo abaixo, com 4 casas após o ponto decimal. Utilize variáveis de dupla precisão (double). Como todos os problemas, não esqueça de imprimir o fim de linha após o resultado, caso contrário, você receberá \"Presentation Error\".",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1002.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1002.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1002.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1002.py"
    }
  },
  "1003": {
    "title": "Soma Simples",
    "description": "Leia dois valores inteiros, no caso para variáveis A e B. A seguir, calcule a soma entre elas e atribua à variável SOMA. A seguir escrever o valor desta variável.",
    "input": "O arquivo de entrada contém 2 valores inteiros.",
    "output": "Imprima a mensagem \"SOMA\" com todas as letras maiúsculas, com um espaço em branco antes e depois da igualdade seguido pelo valor correspondente à soma de A e B. Como todos os problemas, não esqueça de imprimir o fim de linha após o resultado, caso contrário, você receberá \"Presentation Error\".",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1003.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1003.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1003.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1003.py"
    }
  },
  "1004": {
    "title": "Produto Simples",
    "description": "Leia dois valores inteiros. A seguir, calcule o produto entre estes dois valores e atribua esta operação à variável PROD. A seguir mostre a variável PROD com mensagem correspondente.",
    "input": "O arquivo de entrada contém 2 valores inteiros.",
    "output": "Imprima a mensagem \"PROD\" e a variável PROD conforme exemplo abaixo, com um espaço em branco antes e depois da igualdade. Não esqueça de imprimir o fim de linha após o produto, caso contrário seu programa apresentará a mensagem: “Presentation Error”.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1004.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1004.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1004.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1004.py"
    }
  },
  "1005": {
    "title": "Média 1",
    "description": "Leia 2 valores de ponto flutuante de dupla precisão A e B, que correspondem a 2 notas de um aluno. A seguir, calcule a média do aluno, sabendo que a nota A tem peso 3.5 e a nota B tem peso 7.5 (A soma dos pesos portanto é 11). Assuma que cada nota pode ir de 0 até 10.0, sempre com uma casa decimal.",
    "input": "O arquivo de entrada contém 2 valores com uma casa decimal cada um.",
    "output": "Imprima a mensagem \"MEDIA\" e a média do aluno conforme exemplo abaixo, com 5 dígitos após o ponto decimal e com um espaço em branco antes e depois da igualdade. Utilize variáveis de dupla precisão (double) e como todos os problemas, não esqueça de imprimir o fim de linha após o resultado, caso contrário, você receberá \"Presentation Error\".",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1005.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1005.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1005.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1005.py"
    }
  },
  "1006": {
    "title": "Média 2",
    "description": "Leia 3 valores, no caso, variáveis A, B e C, que são as três notas de um aluno. A seguir, calcule a média do aluno, sabendo que a nota A tem peso 2, a nota B tem peso 3 e a nota C tem peso 5. Considere que cada nota pode ir de 0 até 10.0, sempre com uma casa decimal.",
    "input": "O arquivo de entrada contém 3 valores com uma casa decimal, de dupla precisão (double).",
    "output": "Imprima a mensagem \"MEDIA\" e a média do aluno conforme exemplo abaixo, com 1 dígito após o ponto decimal e com um espaço em branco antes e depois da igualdade. Assim como todos os problemas, não esqueça de imprimir o fim de linha após o resultado, caso contrário, você receberá \"Presentation Error\".",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1006.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1006.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1006.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1006.py"
    }
  },
  "1007": {
    "title": "Diferença",
    "description": "Leia quatro valores inteiros A, B, C e D. A seguir, calcule e mostre a diferença do produto de A e B pelo produto de C e D segundo a fórmula: DIFERENCA = (A * B - C * D).",
    "input": "O arquivo de entrada contém 4 valores inteiros.",
    "output": "Imprima a mensagem DIFERENCA com todas as letras maiúsculas, conforme exemplo abaixo, com um espaço em branco antes e depois da igualdade.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1007.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1007.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1007.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1007.py"
    }
  },
  "1008": {
    "title": "Salário",
    "description": "Escreva um programa que leia o número de um funcionário, seu número de horas trabalhadas, o valor que recebe por hora e calcula o salário desse funcionário. A seguir, mostre o número e o salário do funcionário, com duas casas decimais.",
    "input": "O arquivo de entrada contém 2 números inteiros e 1 número com duas casas decimais, representando o número, quantidade de horas trabalhadas e o valor que o funcionário recebe por hora trabalhada, respectivamente.",
    "output": "Imprima o número e o salário do funcionário, conforme exemplo fornecido, com um espaço em branco antes e depois da igualdade. No caso do salário, também deve haver um espaço em branco após o $.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1008.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1008.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1008.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1008.py"
    }
  },
  "1009": {
    "title": "Salário com Bônus",
    "description": "Faça um programa que leia o nome de um vendedor, o seu salário fixo e o total de vendas efetuadas por ele no mês (em dinheiro). Sabendo que este vendedor ganha 15% de comissão sobre suas vendas efetuadas, informar o total a receber no final do mês, com duas casas decimais.",
    "input": "O arquivo de entrada contém um texto (primeiro nome do vendedor) e 2 valores de dupla precisão (double) com duas casas decimais, representando o salário fixo do vendedor e montante total das vendas efetuadas por este vendedor, respectivamente.",
    "output": "Imprima o total que o funcionário deverá receber, conforme exemplo fornecido.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1009.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1009.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1009.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1009.py"
    }
  },
  "1010": {
    "title": "Cálculo Simples",
    "description": "Neste problema, deve-se ler o código de uma peça 1, o número de peças 1, o valor unitário de cada peça 1, o código de uma peça 2, o número de peças 2 e o valor unitário de cada peça 2. Após, calcule e mostre o valor a ser pago.",
    "input": "O arquivo de entrada contém duas linhas de dados. Em cada linha haverá 3 valores, respectivamente dois inteiros e um valor com 2 casas decimais.",
    "output": "A saída deverá ser uma mensagem conforme o exemplo fornecido abaixo, lembrando de deixar um espaço após os dois pontos e um espaço após o \"R$\". O valor deverá ser apresentado com 2 casas após o ponto.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1010.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1010.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1010.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1010.py"
    }
  },
  "1011": {
    "title": "Esfera",
    "description": "Faça um programa que calcule e mostre o volume de uma esfera sendo fornecido o valor de seu raio (R). A fórmula para calcular o volume é: (4/3) * pi * R3. Considere (atribua) para pi o valor 3.14159.\n\nDica: Ao utilizar a fórmula, procure usar (4/3.0) ou (4.0/3), pois algumas linguagens (dentre elas o C++), assumem que o resultado da divisão entre dois inteiros é outro inteiro.",
    "input": "O arquivo de entrada contém um valor de ponto flutuante (dupla precisão), correspondente ao raio da esfera.",
    "output": "A saída deverá ser uma mensagem \"VOLUME\" conforme o exemplo fornecido abaixo, com um espaço antes e um espaço depois da igualdade. O valor deverá ser apresentado com 3 casas após o ponto.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1011.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1011.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1011.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1011.py"
    }
  },
  "1012": {
    "title": "Área",
    "description": "Escreva um programa que leia três valores com ponto flutuante de dupla precisão: A, B e C. Em seguida, calcule e mostre:\na) a área do triângulo retângulo que tem A por base e C por altura.\nb) a área do círculo de raio C. (pi = 3.14159)\nc) a área do trapézio que tem A e B por bases e C por altura.\nd) a área do quadrado que tem lado B.\ne) a área do retângulo que tem lados A e B.",
    "input": "O arquivo de entrada contém três valores com um dígito após o ponto decimal.",
    "output": "O arquivo de saída deverá conter 5 linhas de dados. Cada linha corresponde a uma das áreas descritas acima, sempre com mensagem correspondente e um espaço entre os dois pontos e o valor. O valor calculado deve ser apresentado com 3 dígitos após o ponto decimal.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1012.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1012.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1012.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1012.py"
    }
  },
  "1013": {
    "title": "O Maior",
    "description": "Faça um programa que leia três valores e apresente o maior dos três valores lidos seguido da mensagem “eh o maior”. Utilize a fórmula:\n\nMAIORAB = (a + b + abs(a-b)) / 2\n\nObs.: a fórmula apenas calcula o maior entre os dois primeiros (a e b). Um segundo passo, portanto é necessário para chegar no resultado esperado.",
    "input": "O arquivo de entrada contém três valores inteiros.",
    "output": "Imprima o maior dos três valores seguido por um espaço e a mensagem \"eh o maior\".",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1013.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1013.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1013.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1013.py"
    }
  },
  "1014": {
    "title": "Consumo",
    "description": "Calcule o consumo médio de um automóvel sendo fornecidos a distância total percorrida (em Km) e o total de combustível gasto (em litros).",
    "input": "O arquivo de entrada contém dois valores: um valor inteiro X representando a distância total percorrida (em Km), e um valor real Y representando o total de combustível gasto, com um dígito após o ponto decimal.",
    "output": "Apresente o valor que representa o consumo médio do automóvel com 3 casas após a vírgula, seguido da mensagem \"km/l\".",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1014.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1014.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1014.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1014.py"
    }
  },
  "1015": {
    "title": "Distância entre dois pontos",
    "description": "Leia os quatro valores correspondentes aos eixos x e y de dois pontos quaisquer no plano, p1(x1,y1) e p2(x2,y2) e calcule a distância entre eles, mostrando 4 casas decimais, segundo a fórmula:\n\nDistância = sqrt((x2 - x1)² + (y2-y1)²)",
    "input": "O arquivo de entrada contém duas linhas de dados. A primeira linha contém dois valores de ponto flutuante: x1 y1 e a segunda linha contém dois valores de ponto flutuante x2 y2.",
    "output": "Calcule e imprima o valor da distância segundo a fórmula fornecida, considerando 4 casas decimais.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1015.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1015.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1015.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1015.py"
    }
  },
  "1016": {
    "title": "Distância",
    "description": "Dois carros (X e Y) partem em uma mesma direção. O carro X sai com velocidade constante de 60 Km/h e o carro Y sai com velocidade constante de 90 Km/h.\n\nEm uma hora (60 minutos) o carro Y consegue se distanciar 30 quilômetros do carro X, ou seja, consegue se afastar um quilômetro a cada 2 minutos.\n\nLeia a distância (em Km) e calcule quanto tempo leva (em minutos) para o carro Y tomar essa distância do outro carro.",
    "input": "O arquivo de entrada contém um número inteiro.",
    "output": "Imprima o tempo necessário seguido da mensagem \"minutos\".",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1016.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1016.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1016.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1016.py"
    }
  },
  "1017": {
    "title": "Gasto de Combustível",
    "description": "Joaozinho quer calcular e mostrar a quantidade de litros de combustível gastos em uma viagem, ao utilizar um automóvel que faz 12 KM/L. Para isso, ele gostaria que você o auxiliasse através de um simples programa. Para efetuar o cálculo, deve-se fornecer o tempo gasto na viagem (em horas) e a velocidade média durante a mesma (em km/h). Assim, pode-se obter distância percorrida e, em seguida, calcular quantos litros seriam necessários. Mostre o valor com 3 casas decimais após o ponto.",
    "input": "O arquivo de entrada contém dois inteiros. O primeiro é o tempo gasto na viagem (em horas) e o segundo é a velocidade média durante a mesma (em km/h).",
    "output": "Imprima a quantidade de litros necessária para realizar a viagem, com três dígitos após o ponto decimal",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1017.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1017.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1017.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1017.py"
    }
  },
  "1018": {
    "title": "Cédulas",
    "description": "Leia um valor inteiro. A seguir, calcule o menor número de notas possíveis (cédulas) no qual o valor pode ser decomposto. As notas consideradas são de 100, 50, 20, 10, 5, 2 e 1. A seguir mostre o valor lido e a relação de notas necessárias.",
    "input": "O arquivo de entrada contém um valor inteiro N (0 < N < 1000000).",
    "output": "Imprima o valor lido e, em seguida, a quantidade mínima de notas de cada tipo necessárias, conforme o exemplo fornecido. Não esqueça de imprimir o fim de linha após cada linha, caso contrário seu programa apresentará a mensagem: “Presentation Error”.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1018.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1018.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1018.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1018.py"
    }
  },
  "1019": {
    "title": "Conversão de Tempo",
    "description": "Leia um valor inteiro, que é o tempo de duração em segundos de um determinado evento em uma fábrica, e informe-o expresso no formato horas:minutos:segundos.",
    "input": "O arquivo de entrada contém um valor inteiro N.",
    "output": "Imprima o tempo lido no arquivo de entrada (segundos), convertido para horas:minutos:segundos, conforme exemplo fornecido.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1019.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1019.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1019.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1019.py"
    }
  },
  "1020": {
    "title": "Idade em Dias",
    "description": "Leia um valor inteiro correspondente à idade de uma pessoa em dias e informe-a em anos, meses e dias\n\nObs.: apenas para facilitar o cálculo, considere todo ano com 365 dias e todo mês com 30 dias. Nos casos de teste nunca haverá uma situação que permite 12 meses e alguns dias, como 360, 363 ou 364. Este é apenas um exercício com objetivo de testar raciocínio matemático simples.",
    "input": "O arquivo de entrada contém um valor inteiro.",
    "output": "Imprima a saída conforme exemplo fornecido.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1020.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1020.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1020.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1020.py"
    }
  },
  "1021": {
    "title": "Notas e Moedas",
    "description": "Leia um valor de ponto flutuante com duas casas decimais. Este valor representa um valor monetário. A seguir, calcule o menor número de notas e moedas possíveis no qual o valor pode ser decomposto. As notas consideradas são de 100, 50, 20, 10, 5, 2. As moedas possíveis são de 1, 0.50, 0.25, 0.10, 0.05 e 0.01. A seguir mostre a relação de notas necessárias.",
    "input": "O arquivo de entrada contém um valor de ponto flutuante N (0 ≤ N ≤ 1000000.00).",
    "output": "Imprima a quantidade mínima de notas e moedas necessárias para trocar o valor inicial, conforme exemplo fornecido.\n\nObs: Utilize ponto (.) para separar a parte decimal.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1021.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1021.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1021.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1021.py"
    }
  },
  "1035": {
    "title": "Teste de Seleção 1",
    "description": "Leia 4 valores inteiros A, B, C e D. A seguir, se B for maior do que C e se D for maior do que A, e a soma de C com D for maior que a soma de A e B e se C e D, ambos, forem positivos e se a variável A for par escrever a mensagem \"Valores aceitos\", senão escrever \"Valores nao aceitos\".",
    "input": "Quatro números inteiros A, B, C e D.",
    "output": "Mostre a respectiva mensagem após a validação dos valores.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1035.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1035.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1035.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1035.py"
    }
  },
  "1036": {
    "title": "Fórmula de Bhaskara",
    "description": "Leia 3 valores de ponto flutuante e efetue o cálculo das raízes da equação de Bhaskara. Se não for possível calcular as raízes, mostre a mensagem correspondente “Impossivel calcular”, caso haja uma divisão por 0 ou raiz de numero negativo.",
    "input": "Leia três valores de ponto flutuante (double) A, B e C.",
    "output": "Se não houver possibilidade de calcular as raízes, apresente a mensagem \"Impossivel calcular\". Caso contrário, imprima o resultado das raízes com 5 dígitos após o ponto, com uma mensagem correspondente conforme exemplo abaixo. Imprima sempre o final de linha após cada mensagem.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1036.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1036.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1036.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1036.py"
    }
  },
  "1037": {
    "title": "Intervalo",
    "description": "Você deve fazer um programa que leia um valor qualquer e apresente uma mensagem dizendo em qual dos seguintes intervalos ([0,25], (25,50], (50,75], (75,100]) este valor se encontra. Obviamente se o valor não estiver em nenhum destes intervalos, deverá ser impressa a mensagem “Fora de intervalo”.\n\nO símbolo ( representa \"maior que\". Por exemplo:\n[0,25]  indica valores entre 0 e 25.0000, inclusive eles.\n(25,50] indica valores maiores que 25 Ex: 25.00001 até o valor 50.0000000",
    "input": "O arquivo de entrada contém um número com ponto flutuante qualquer.",
    "output": "A saída deve ser uma mensagem conforme exemplo abaixo.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1037.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1037.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1037.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1037.py"
    }
  },
  "1038": {
    "title": "Lanche",
    "description": "Com base na tabela abaixo, escreva um programa que leia o código de um item e a quantidade deste item. A seguir, calcule e mostre o valor da conta a pagar.\n\n1 - Cachorro Quente - R$ 4,00\n2 - X-Salada - R$ 4,50\n3 - X-Bacon - R$ 5,00\n4 - Torrada Simples - R$ 2,00\n5 - Refrigerante R$ 1,50",
    "input": "O arquivo de entrada contém dois valores inteiros correspondentes ao código e à quantidade de um item conforme tabela acima.",
    "output": "O arquivo de saída deve conter a mensagem \"Total: R$ \" seguido pelo valor a ser pago, com 2 casas após o ponto decimal.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1038.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1038.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1038.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1038.py"
    }
  },
  "1040": {
    "title": "Média 3",
    "description": "Leia quatro números (N1, N2, N3, N4), cada um deles com uma casa decimal, correspondente às quatro notas de um aluno. Calcule a média com pesos 2, 3, 4 e 1, respectivamente, para cada uma destas notas e mostre esta média acompanhada pela mensagem \"Media: \". Se esta média for maior ou igual a 7.0, imprima a mensagem \"Aluno aprovado.\". Se a média calculada for inferior a 5.0, imprima a mensagem \"Aluno reprovado.\". Se a média calculada for um valor entre 5.0 e 6.9, inclusive estas, o programa deve imprimir a mensagem \"Aluno em exame.\".\n\nNo caso do aluno estar em exame, leia um valor correspondente à nota do exame obtida pelo aluno. Imprima então a mensagem \"Nota do exame: \" acompanhada pela nota digitada. Recalcule a média (some a pontuação do exame com a média anteriormente calculada e divida por 2). e imprima a mensagem \"Aluno aprovado.\" (caso a média final seja 5.0 ou mais ) ou \"Aluno reprovado.\", (caso a média tenha ficado 4.9 ou menos). Para estes dois casos (aprovado ou reprovado após ter pego exame) apresente na última linha uma mensagem \"Media final: \" seguido da média final para esse aluno.",
    "input": "A entrada contém quatro números de ponto flutuante correspendentes as notas dos alunos.",
    "output": "Todas as respostas devem ser apresentadas com uma casa decimal. As mensagens devem ser impressas conforme a descrição do problema. Não esqueça de imprimir o enter após o final de cada linha, caso contrário obterá \"Presentation Error\".",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1040.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1040.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1040.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1040.py"
    }
  },
  "1041": {
    "title": "Coordenadas de 1 ponto",
    "description": "Leia 2 valores com uma casa decimal (x e y), que devem representar as coordenadas de um ponto em um plano. A seguir, determine qual o quadrante ao qual pertence o ponto, ou se está sobre um dos eixos cartesianos ou na origem (x = y = 0).\n\nSe o ponto estiver na origem, escreva a mensagem “Origem”.\n\nSe o ponto estiver sobre um dos eixos escreva “Eixo X” ou “Eixo Y”, conforme for a situação.",
    "input": "A entrada contem as coordenadas de um ponto.",
    "output": "A saída deve apresentar o quadrante em que o ponto se encontra.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1041.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1041.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1041.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1041.py"
    }
  },
  "1042": {
    "title": "Sort Simples",
    "description": "Leia 3 valores inteiros e ordene-os em ordem crescente. No final, mostre os valores em ordem crescente, uma linha em branco e em seguida, os valores na sequência como foram lidos.",
    "input": "A entrada contem três números inteiros.",
    "output": "Imprima a saída conforme foi especificado.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1042.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1042.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1042.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1042.py"
    }
  },
  "1043": {
    "title": "Triângulo",
    "description": "Leia 3 valores reais (A, B e C) e verifique se eles formam ou não um triângulo. Em caso positivo, calcule o perímetro do triângulo e apresente a mensagem:\n\nPerimetro = XX.X\n\nEm caso negativo, calcule a área do trapézio que tem A e B como base e C como altura, mostrando a mensagem\n\nArea = XX.X",
    "input": "A entrada contém três valores reais.",
    "output": "O resultado deve ser apresentado com uma casa decimal.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1043.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1043.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1043.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1043.py"
    }
  },
  "1044": {
    "title": "Múltiplos",
    "description": "Leia 2 valores inteiros (A e B). Após, o programa deve mostrar uma mensagem \"Sao Multiplos\" ou \"Nao sao Multiplos\", indicando se os valores lidos são múltiplos entre si.",
    "input": "A entrada contém valores inteiros.",
    "output": "A saída deve conter uma das mensagens conforme descrito acima.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1044.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1044.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1044.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1044.py"
    }
  },
  "1045": {
    "title": "Tipos de Triângulos",
    "description": "Leia 3 valores de ponto flutuante A, B e C e ordene-os em ordem decrescente, de modo que o lado A representa o maior dos 3 lados. A seguir, determine o tipo de triângulo que estes três lados formam, com base nos seguintes casos, sempre escrevendo uma mensagem adequada:\n\nse A ≥ B+C, apresente a mensagem: NAO FORMA TRIANGULO\nse A2 = B2 + C2, apresente a mensagem: TRIANGULO RETANGULO\nse A2 > B2 + C2, apresente a mensagem: TRIANGULO OBTUSANGULO\nse A2 < B2 + C2, apresente a mensagem: TRIANGULO ACUTANGULO\nse os três lados forem iguais, apresente a mensagem: TRIANGULO EQUILATERO\nse apenas dois dos lados forem iguais, apresente a mensagem: TRIANGULO ISOSCELES",
    "input": "A entrada contem três valores de ponto flutuante de dupla precisão A (0 < A) , B (0 < B) e C (0 < C).",
    "output": "Imprima todas as classificações do triângulo especificado na entrada.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1045.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1045.java",
      "lua": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Lua/Iniciante/1045.lua",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1045.py"
    }
  },
  "1046": {
    "title": "Tempo de jogo",
    "description": "Leia a hora inicial e a hora final de um jogo. A seguir calcule a duração do jogo, sabendo que o mesmo pode começar em um dia e terminar em outro, tendo uma duração mínima de 1 hora e máxima de 24 horas.",
    "input": "A entrada contém dois valores inteiros representando a hora de início e a hora de fim do jogo.",
    "output": "Apresente a duração do jogo conforme exemplo abaixo.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1046.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1046.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1046.py"
    }
  },
  "1047": {
    "title": "Tempo de Jogo com Minutos",
    "description": "Leia a hora inicial, minuto inicial, hora final e minuto final de um jogo. A seguir calcule a duração do jogo.\n\nObs: O jogo tem duração mínima de um (1) minuto e duração máxima de 24 horas.",
    "input": "Quatro números inteiros representando a hora de início e fim do jogo.",
    "output": "Mostre a seguinte mensagem: “O JOGO DUROU XXX HORA(S) E YYY MINUTO(S)” .",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1047.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1047.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1047.py"
    }
  },
  "1048": {
    "title": "Aumento de Salário",
    "description": "A empresa ABC resolveu conceder um aumento de salários a seus funcionários de acordo com a tabela abaixo:\n\n0 - 400.00 - 15%\n400.01 - 800.00 - 12%\n800.01 - 1200.00 - 10%\n1200.01 - 2000.00 - 7%\nAcima de 2000.00 - 4%\n\nLeia o salário do funcionário e calcule e mostre o novo salário, bem como o valor de reajuste ganho e o índice reajustado, em percentual.",
    "input": "A entrada contém apenas um valor de ponto flutuante, com duas casas decimais.",
    "output": "Imprima 3 linhas na saída: o novo salário, o valor ganho de reajuste (ambos devem ser apresentados com 2 casas decimais) e o percentual de reajuste ganho, conforme exemplo abaixo.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1048.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1048.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1048.py"
    }
  },
  "1049": {
    "title": "Animal",
    "description": "Neste problema, você deverá ler 3 palavras que definem o tipo de animal possível segundo o esquema abaixo, da esquerda para a direita.  Em seguida conclua qual dos animais seguintes foi escolhido, através das três palavras fornecidas.\n\nVertebrado > Ave > Carnívoro > Águia\nVertebrado > Ave > Onívoro > Pomba\nVertebrado > Mamífero > Onívoro > Homem\nVertebrado > Mamífero > Herbívoro > Vaca\nInvertebrado > Inseto > Hematófago > Pulga\nInvertebrado > Inseto > Herbívoro > Lagarta\nInvertebrado > anelídeo > hematófago > Sanguessuga\nInvertebrado > anelídeo > onívoro > Minhoca",
    "input": "A entrada contém 3 palavras, uma em cada linha, necessárias para identificar o animal segundo a figura acima, com todas as letras minúsculas.",
    "output": "Imprima o nome do animal correspondente à entrada fornecida.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1049.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1049.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1049.py"
    }
  },
  "1050": {
    "title": "DDD",
    "description": "Leia um número inteiro que representa um código de DDD para discagem interurbana. Em seguida, informe à qual cidade o DDD pertence, considerando a tabela abaixo:\n\n61 - Brasília\n71 - Salvador\n11 - São Paulo\n21 - Rio de Janeiro\n32 - Juiz de Fora\n19 - Campinas\n27 - Vitória\n31 - Belo Horizonte\n\nSe a entrada for qualquer outro DDD que não esteja presente na tabela acima, o programa deverá informar:\nDDD nao cadastrado",
    "input": "A entrada consiste de um único valor inteiro.",
    "output": "Imprima o nome da cidade correspondente ao DDD existente na entrada. Imprima DDD nao cadastrado caso não existir DDD correspondente ao número digitado.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1050.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1050.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1050.py"
    }
  },
  "1051": {
    "title": "Imposto de Renda",
    "description": "Em um país imaginário denominado Lisarb, todos os habitantes ficam felizes em pagar seus impostos, pois sabem que nele não existem políticos corruptos e os recursos arrecadados são utilizados em benefício da população, sem qualquer desvio. A moeda deste país é o Rombus, cujo símbolo é o R$.\n\nLeia um valor com duas casas decimais, equivalente ao salário de uma pessoa de Lisarb. Em seguida, calcule e mostre o valor que esta pessoa deve pagar de Imposto de Renda, segundo a tabela abaixo.\n\nDe R$ 0,00 a R$ 2000,00 - Isento\nDe R$ 2000,01 até R$ 3000,00 - 8%\nDe R$ 3000,01 até R$ 4500,00 - 18%\nAcima de R$ 4500,00 - 28%\n\nLembre que, se o salário for R$ 3002.00, a taxa que incide é de 8% apenas sobre R$ 1000.00, pois a faixa de salário que fica de R$ 0.00 até R$ 2000.00 é isenta de Imposto de Renda. No exemplo fornecido (abaixo), a taxa é de 8% sobre R$ 1000.00 + 18% sobre R$ 2.00, o que resulta em R$ 80.36 no total. O valor deve ser impresso com duas casas decimais.",
    "input": "A entrada contém apenas um valor de ponto flutuante, com duas casas decimais.",
    "output": "Imprima o texto \"R$\" seguido de um espaço e do valor total devido de Imposto de Renda, com duas casas após o ponto. Se o valor de entrada for menor ou igual a 2000, deverá ser impressa a mensagem \"Isento\".",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1051.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1051.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1051.py"
    }
  },
  "1052": {
    "title": "Mês",
    "description": "Leia um valor inteiro entre 1 e 12, inclusive. Correspondente a este valor, deve ser apresentado como resposta o mês do ano por extenso, em inglês, com a primeira letra maiúscula.",
    "input": "A entrada contém um único valor inteiro.",
    "output": "Imprima por extenso o nome do mês correspondente ao número existente na entrada, com a primeira letra em maiúscula.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1052.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1052.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1052.py"
    }
  },
  "1059": {
    "title": "Números Pares",
    "description": "Faça um programa que mostre os números pares entre 1 e 100, inclusive.",
    "input": "Neste problema extremamente simples de repetição não há entrada.",
    "output": "Imprima todos os números pares entre 1 e 100, inclusive se for o caso, um em cada linha.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1059.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1059.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1059.py"
    }
  },
  "1060": {
    "title": "Números Positivos",
    "description": "Faça um programa que leia 6 valores. Estes valores serão somente negativos ou positivos (desconsidere os valores nulos). A seguir, mostre a quantidade de valores positivos digitados.",
    "input": "Seis valores, negativos e/ou positivos.",
    "output": "Imprima uma mensagem dizendo quantos valores positivos foram lidos.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1060.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1060.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1060.py"
    }
  },
  "1061": {
    "title": "Tempo de um evento",
    "description": "Pedrinho está organizando um evento em sua Universidade. O evento deverá ser no mês de Abril, iniciando e terminando dentro do mês. O problema é que Pedrinho quer calcular o tempo que o evento vai durar, uma vez que ele sabe quando inicia e quando termina o evento.\n\nSabendo que o evento pode durar de poucos segundos a vários dias, você deverá ajudar Pedrinho a calcular a duração deste evento.",
    "input": "Como entrada, na primeira linha vai haver a descrição “Dia”, seguido de um espaço e o dia do mês no qual o evento vai começar. Na linha seguinte, será informado o momento no qual o evento vai iniciar, no formato hh : mm : ss. Na terceira e quarta linha de entrada haverá outra informação no mesmo formato das duas primeiras linhas, indicando o término do evento.",
    "output": "Na saída, deve ser apresentada a duração do evento, no seguinte formato:\n\nW dia(s)\nX hora(s)\nY minuto(s)\nZ segundo(s)\n\nObs: Considere que o evento do caso de teste para o problema tem duração mínima de 1 minuto.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1061.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1061.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1061.py"
    }
  },
  "1064": {
    "title": "Positivos e Média",
    "description": "Leia 6 valores. Em seguida, mostre quantos destes valores digitados foram positivos. Na próxima linha, deve-se mostrar a média de todos os valores positivos digitados, com um dígito após o ponto decimal.",
    "input": "A entrada contém 6 números que podem ser valores inteiros ou de ponto flutuante. Pelo menos um destes números será positivo.",
    "output": "O primeiro valor de saída é a quantidade de valores positivos. A próxima linha deve mostrar a média dos valores positivos digitados.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1064.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1064.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1064.py"
    }
  },
  "1065": {
    "title": "Pares entre Cinco Números",
    "description": "Faça um programa que leia 5 valores inteiros. Conte quantos destes valores digitados são pares e mostre esta informação.",
    "input": "O arquivo de entrada contém 5 valores inteiros quaisquer.",
    "output": "Imprima a mensagem conforme o exemplo fornecido, indicando a quantidade de valores pares lidos.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1065.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1065.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1065.py"
    }
  },
  "1066": {
    "title": "Pares, Ímpares, Positivos e Negativos",
    "description": "Leia 5 valores Inteiros. A seguir mostre quantos valores digitados foram pares, quantos valores digitados foram ímpares, quantos valores digitados foram positivos e quantos valores digitados foram negativos.",
    "input": "O arquivo de entrada contém 5 valores inteiros quaisquer.",
    "output": "Imprima a mensagem conforme o exemplo fornecido, uma mensagem por linha, não esquecendo o final de linha após cada uma.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1066.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1066.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1066.py"
    }
  },
  "1067": {
    "title": "Números Ímpares",
    "description": "Leia um valor inteiro X (1 <= X <= 1000). Em seguida mostre os ímpares de 1 até X, um valor por linha, inclusive o X, se for o caso.",
    "input": "O arquivo de entrada contém 1 valor inteiro qualquer.",
    "output": "Imprima todos os valores ímpares de 1 até X, inclusive X, se for o caso.",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1067.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1067.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1067.py"
    }
  },
  "1070": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1070.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1070.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1070.py"
    }
  },
  "1071": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1071.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1071.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1071.py"
    }
  },
  "1072": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1072.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1072.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1072.py"
    }
  },
  "1073": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1073.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1073.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1073.py"
    }
  },
  "1074": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1074.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1074.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1074.py"
    }
  },
  "1075": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1075.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1075.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1075.py"
    }
  },
  "1078": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1078.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1078.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1078.py"
    }
  },
  "1079": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1079.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1079.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1079.py"
    }
  },
  "1080": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1080.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1080.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1080.py"
    }
  },
  "1094": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1094.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1094.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1094.py"
    }
  },
  "1095": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1095.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1095.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1095.py"
    }
  },
  "1096": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1096.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1096.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1096.py"
    }
  },
  "1097": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1097.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1097.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1097.py"
    }
  },
  "1098": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1098.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1098.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1098.py"
    }
  },
  "1099": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1099.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1099.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1099.py"
    }
  },
  "1101": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1101.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1101.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1101.py"
    }
  },
  "1103": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1103.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1103.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1103.py"
    }
  },
  "1113": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1113.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1113.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1113.py"
    }
  },
  "1114": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1114.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1114.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1114.py"
    }
  },
  "1115": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1115.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1115.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1115.py"
    }
  },
  "1116": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1116.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1116.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1116.py"
    }
  },
  "1117": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1117.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1117.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1117.py"
    }
  },
  "1118": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1118.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1118.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1118.py"
    }
  },
  "1131": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1131.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1131.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1131.py"
    }
  },
  "1132": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1132.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1132.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1132.py"
    }
  },
  "1133": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1133.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1133.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1133.py"
    }
  },
  "1134": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1134.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1134.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1134.py"
    }
  },
  "1142": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1142.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1142.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1142.py"
    }
  },
  "1143": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1143.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1143.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1143.py"
    }
  },
  "1144": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1144.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1144.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1144.py"
    }
  },
  "1145": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1145.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1145.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1145.py"
    }
  },
  "1146": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1146.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1146.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1146.py"
    }
  },
  "1149": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1149.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1149.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1149.py"
    }
  },
  "1150": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1150.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1150.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1150.py"
    }
  },
  "1151": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1151.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1151.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1151.py"
    }
  },
  "1153": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1153.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1153.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1153.py"
    }
  },
  "1154": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1154.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1154.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1154.py"
    }
  },
  "1155": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1155.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1155.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1155.py"
    }
  },
  "1156": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1156.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1156.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1156.py"
    }
  },
  "1157": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1157.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1157.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1157.py"
    }
  },
  "1158": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "go": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/go/1158.go",
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1158.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1158.py"
    }
  },
  "1159": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1159.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1159.py"
    }
  },
  "1160": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1160.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1160.py"
    }
  },
  "1164": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1164.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1164.py"
    }
  },
  "1165": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1165.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1165.py"
    }
  },
  "1172": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1172.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1172.py"
    }
  },
  "1173": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1173.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1173.py"
    }
  },
  "1174": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1174.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1174.py"
    }
  },
  "1175": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1175.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1175.py"
    }
  },
  "1176": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1176.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1176.py"
    }
  },
  "1177": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1177.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1177.py"
    }
  },
  "1178": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1178.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1178.py"
    }
  },
  "1179": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1179.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1179.py"
    }
  },
  "1180": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1180.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1180.py"
    }
  },
  "1181": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1181.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1181.py"
    }
  },
  "1182": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "java": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Java/1%20-%20Iniciante/e1182.java",
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1182.py"
    }
  },
  "1183": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1183.py"
    }
  },
  "1184": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1184.py"
    }
  },
  "1185": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1185.py"
    }
  },
  "1186": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1186.py"
    }
  },
  "1187": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1187.py"
    }
  },
  "1564": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1564.py"
    }
  },
  "1589": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1589.py"
    }
  },
  "1759": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1759.py"
    }
  },
  "1789": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/1%20-%20Iniciante/1789.py"
    }
  },
  "1068": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/4%20-%20estruturas%20e%20bibliotecas/1068.py"
    }
  },
  "1069": {
    "title": "",
    "description": "",
    "input": "",
    "output": "",
    "languages": {
      "python": "https://raw.githubusercontent.com/Lokost/beecrowd-resolutions/main/Python/4%20-%20estruturas%20e%20bibliotecas/1069.py"
    }
  }
}
